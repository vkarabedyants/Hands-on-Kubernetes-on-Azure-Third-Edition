name: Pipeline
on:
  push:
    branches: [ main ]
    paths:
    - Chapter15/**
    - .github/workflows/pipeline.yaml
  workflow_dispatch:
env:
      ACRNAME: functionskeda
jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git checkout
        uses: actions/checkout@v2
      - name: az Cli Login
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
      - name: ACR login
        run: az acr login -n $ACRNAME
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
         context: ./Chapter15
         push: true
         tags: ${{ env.ACRNAME }}.azurecr.io/website/website:${{github.run_number }}
  CD:
   runs-on: ubuntu-latest
   needs: CI
   steps:
    - name: Git checkout
      uses: actions/checkout@v2 
      
    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        resource-group: vikk2211
        cluster-name: vikk2020
    - name: Helm upgrade
      run: |
        helm upgrade website Chapter15/website --install --set image.repository=$ACRNAME.azurecr.io/website/website --set image.tag=${{ github.run_number }}
        
    - name: Get service IP
      run: | 
       PUBLICIP="" while [ -z $PUBLICIP ]; do 
        echo "Waiting for public IP..."
        PUBLICIP=$(kubectl get service website -o 
        jsonpath='{.status.loadBalancer.ingress[0].ip}')
        [ -z "$PUBLICIP" ] && sleep 10
        done
        echo $PUBLICIP
